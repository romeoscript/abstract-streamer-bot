import { Parameter } from "../models/Parameter.js";
export declare const TRIGGERS: {
    TRENDING: {
        X: {
            description: string;
            tags: {};
            image: string;
            X_POST_TRIGGER: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    tweetContent: string;
                    tweetURL: string;
                    timestamp: string;
                    account: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        BALANCE: {
            description: string;
            chains: number[];
            image: string;
            BALANCE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    balance: string;
                };
                frontendHelpers: {
                    output: {
                        balance: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BALANCE_MOVEMENT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                parameters: Parameter[];
                output: {
                    balanceChanges: string;
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        EVERY_PERIOD: {
            description: string;
            image: string;
            EVERY_PERIOD: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    CORE: {
        EVERY_PERIOD: {
            description: string;
            image: string;
            EVERY_PERIOD: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        HELPER: {
            description: string;
            image: string;
            hideInLeftPanel: boolean;
            TIMESTAMP: {
                name: string;
                dynamicName: string;
                prototype: string;
                description: string;
                type: number;
                output: string;
                parameters: Parameter[];
                blockId: number;
                image: string;
            };
        };
        EMPTYBLOCK: {
            image: string;
            description: string;
            chains: never[];
            EMPTYBLOCK: {
                name: string;
                description: string;
                type: number;
                checks: never[];
                output: {};
                parameters: Parameter[];
                examples: never[];
                blockId: number;
                image: string;
            };
        };
    };
    TOKENS: {
        TRANSFER: {
            description: string;
            chains: number[];
            image: string;
            TRANSFER: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    value: string;
                    from: string;
                    to: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        value: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            NATIVE_TRANSFER: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    amount: string;
                    currentBalance: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        BALANCE: {
            description: string;
            chains: number[];
            image: string;
            BALANCE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    balance: string;
                };
                frontendHelpers: {
                    output: {
                        balance: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BALANCE_MOVEMENT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                parameters: Parameter[];
                output: {
                    balanceChanges: string;
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        APPROVAL: {
            description: string;
            chains: number[];
            image: string;
            APPROVAL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    owner: string;
                    spender: string;
                    value: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        value: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        PRICE: {
            description: string;
            chains: number[];
            image: string;
            PRICE_MOVEMENT_AGAINST_CURRENCY: {
                name: string;
                dynamicName: string;
                prototype: string;
                description: string;
                type: number;
                output: {
                    price: string;
                    currency: string;
                };
                parameters: Parameter[];
                examples: ({
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                } | {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                    externalVariableDescription?: undefined;
                })[];
                blockId: number;
                image: string;
            };
            PRICE_PERCENTAGE_CHANGE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    percentageChange: string;
                    price: string;
                    currency: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            PRICE_WITH_IMPACT_CONSIDERATION: {
                name: string;
                dynamicName: string;
                prototype: string;
                description: string;
                type: number;
                output: {
                    price: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    YIELD: {
        ETHENA: {
            description: string;
            image: string;
            SUSDE_YIELD: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                output: {
                    yield: string;
                };
                parameters: Parameter[];
                examples: ({
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                } | {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                    externalVariableDescription?: undefined;
                })[];
                blockId: number;
                image: string;
            };
            TVL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                output: {
                    supply: string;
                };
                contractAddress: string;
                chainId: number;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        PENDLE: {
            description: string;
            chains: number[];
            image: string;
            PT_IMPLIED_YIELD: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                output: {
                    ptImpliedYield: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        STAKESTONE: {
            description: string;
            chains: number[];
            image: string;
            STAKESTONE_VAULT_LIQUIDITY: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                contractAddress: string;
                output: {
                    idleAmountInEth: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            LATEST_ROUND_ID: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                output: {
                    roundID: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    LENDING: {
        IONIC: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    lendingRate: string;
                };
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    borrowingRate: string;
                };
                blockId: number;
                image: string;
            };
        };
        ASTARIA: {
            description: string;
            chains: number[];
            image: string;
            LEND_RECALLED: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                contractAddress: string;
                output: {
                    loanId: string;
                    recaller: string;
                    end: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        AAVE: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                output: {
                    lendingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                output: {
                    borrowingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            LTV: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                output: {
                    maxLTV: string;
                    currentLTV: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            HEALTH_FACTOR: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                output: {
                    healthFactor: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            PREDICT_IMPACT_ON_LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    predictedLendingRate: string;
                    reservesData: string;
                };
                blockId: number;
                image: string;
            };
        };
        MOONWELL: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                output: {
                    lendingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                output: {
                    borrowingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            PREDICT_IMPACT_ON_LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    predictedLendingRate: string;
                };
                blockId: number;
                image: string;
            };
            LTV: {
                name: string;
                dynamicName: string;
                description: string;
                method: string;
                type: number;
                prototype: string;
                parameters: Parameter[];
                output: {
                    currentLTV: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            HEALTH_FACTOR: {
                name: string;
                dynamicName: string;
                description: string;
                method: string;
                type: number;
                prototype: string;
                parameters: Parameter[];
                output: {
                    healthFactor: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        COMPOUND: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    lendingRate: string;
                };
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    borrowingRate: string;
                };
                blockId: number;
                image: string;
            };
            PREDICT_IMPACT_ON_LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    predictedLendingRate: string;
                };
                blockId: number;
                image: string;
            };
            LTV: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    currentLTV: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            HEALTH_FACTOR: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    healthFactor: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        IRONCLAD: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                output: {
                    lendingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                parameters: Parameter[];
                output: {
                    borrowingRate: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        ZEROLEND: {
            description: string;
            chains: (number | null)[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    lendingRate: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        FLUID: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    lendingRate: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        MORPHO: {
            description: string;
            chains: number[];
            image: string;
            LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    lendingRate: string;
                };
                blockId: number;
                image: string;
            };
            BORROWING_RATES: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    borrowingRate: string;
                };
                blockId: number;
                image: string;
            };
            PREDICT_IMPACT_ON_LENDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    predictedLendingRate: string;
                };
                blockId: number;
                image: string;
            };
            LTV: {
                name: string;
                dynamicName: string;
                description: string;
                method: string;
                type: number;
                prototype: string;
                parameters: Parameter[];
                output: {
                    currentLTV: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            HEALTH_FACTOR: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    healthFactor: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        ACCUMULATED_FINANCE: {
            description: string;
            chains: number[];
            image: string;
            APY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    apy: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            TVL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    tvl: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        THORN: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    inputAmount: string;
                    inputToken: string;
                    amountOut: string;
                    outputToken: string;
                    exchangeRate: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        BIT_PROTOCOL: {
            description: string;
            chains: number[];
            image: string;
            REDEMPTION: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    attemptedDebtAmount: string;
                    actualDebtAmount: string;
                    collateralSent: string;
                    collateralFee: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            TCR: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                contractAddress: string;
                parameters: Parameter[];
                output: {
                    tcr: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        HYPERLEND: {
            description: string;
            chains: number[];
            image: string;
            BORROW_CAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    borrowCap: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            SUPPLY_CAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    supplyCap: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            BORROWABLE_ASSETS: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    borrowableAssets: string;
                    borrowablePercentage: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            SUPPLIABLE_ASSETS: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    suppliableAssets: string;
                    suppliablePercentage: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        HYPERBEAT: {
            description: string;
            chains: number[];
            image: string;
            HEALTH_RATIO: {
                name: string;
                dynamicName: string;
                prototype: string;
                description: string;
                type: number;
                output: {
                    healthRatio: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    DEXES: {
        ODOS: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    inputAmount: string;
                    inputToken: string;
                    amountOut: string;
                    outputToken: string;
                    exchangeRate: string;
                    transactionHash: string;
                };
                frontendHelpers: {
                    output: {
                        inputAmount: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amountOut: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        UNISWAP: {
            description: string;
            chains: number[];
            image: string;
            V3_SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    recipient: string;
                    token0: string;
                    token1: string;
                    amount0: string;
                    amount1: string;
                    sqrtPriceX96: string;
                    liquidity: string;
                    tick: string;
                    transactionHash: string;
                    token0AmountInUSD: string;
                    token1AmountInUSD: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            V2_SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    token0: string;
                    token1: string;
                    amount0In: string;
                    amount1In: string;
                    amount0Out: string;
                    amount1Out: string;
                    to: string;
                    transactionHash: string;
                    tokenInAmountInUSD: string;
                    tokenOutAmountInUSD: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            IS_IN_RANGE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                output: {
                    isInRange: string;
                };
                blockId: number;
                image: string;
            };
            IS_IN_RANGE_V4: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                output: {
                    isInRange: string;
                };
                blockId: number;
                image: string;
            };
        };
        AERODROME: {
            description: string;
            chains: number[];
            image: string;
            SWAP_IN_CONCENTRATED_POOL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    recipient: string;
                    token0: string;
                    token1: string;
                    amount0: string;
                    amount1: string;
                    sqrtPriceX96: string;
                    liquidity: string;
                    tick: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            SWAP_IN_BASIC_POOL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    to: string;
                    token0: string;
                    token1: string;
                    amount0In: string;
                    amount1In: string;
                    amount0Out: string;
                    amount1Out: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        VELODROME: {
            description: string;
            chains: number[];
            image: string;
            SWAP_IN_CONCENTRATED_POOL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    recipient: string;
                    token0: string;
                    token1: string;
                    amount0: string;
                    amount1: string;
                    sqrtPriceX96: string;
                    liquidity: string;
                    tick: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            SWAP_IN_BASIC_POOL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    to: string;
                    amount0In: string;
                    amount1In: string;
                    amount0Out: string;
                    amount1Out: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1In: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        HYPERLIQUID: {
            description: string;
            chains: number[];
            image: string;
            FUNDING_RATE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    hourlyRate: string;
                    annualizedRate: string;
                    data: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            ACTIVE_POSITIONS: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                method: string;
                output: {
                    activePositions: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            SPOT_PRICE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    spotPrice: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            PERPS_PRICE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                prototype: string;
                parameters: Parameter[];
                output: {
                    perpsPrice: string;
                };
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        NEBY: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    inputAmount: string;
                    amountOut: string;
                    exchangeRate: string;
                    transactionHash: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        STANDARD: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    orderbook: string;
                    orderId: string;
                    sender: string;
                    owner: string;
                    price: string;
                    amount: string;
                    transactionHash: string;
                    tokenIn: string;
                    tokenOut: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        SOMNEX: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    inputAmount: string;
                    amountOut: string;
                    exchangeRate: string;
                    transactionHash: string;
                    fee: string;
                    slippageFeeCollectorAmount: string;
                    slippageUserAmount: string;
                    tokenIn: string;
                    tokenOut: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        QUICKSWAP: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    sender: string;
                    recipient: string;
                    tokenIn: string;
                    tokenOut: string;
                    amountIn: string;
                    amountOut: string;
                    exchangeRate: string;
                    price: string;
                    liquidity: string;
                    tick: string;
                    transactionHash: string;
                    fee: string;
                };
                parameters: Parameter[];
                frontendHelpers: {
                    output: {
                        amount0: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amount1: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    SOCIALS: {
        FEAR_AND_GREED: {
            description: string;
            tags: {};
            image: string;
            GET_FEAR_AND_GREED_INDEX: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                output: {
                    value: string;
                };
                parameters: Parameter[];
                examples: ({
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                } | {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                    externalVariableDescription?: undefined;
                })[];
                blockId: number;
                image: string;
            };
        };
        X: {
            description: string;
            tags: {};
            image: string;
            X_POST_TRIGGER: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    tweetContent: string;
                    tweetURL: string;
                    timestamp: string;
                    account: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        POLYMARKET: {
            description: string;
            image: string;
            OUTCOME_PRICE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                blockData: string;
                output: {
                    price: string;
                    outcome: string;
                    question: string;
                    tokens: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        ABSTRACT: {
            description: string;
            image: string;
            ABSTRACT_FLASH_BADGE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    id: string;
                    name: string;
                    requirement: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            ON_STREAMER_LIVE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                prototype: string;
                method: string;
                output: {
                    isLive: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            ON_NEW_APP_RELEASE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    newApps: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            ON_USERS_NEW_BADGE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    newBadges: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        DEFILLAMA: {
            description: string;
            image: string;
            ON_NEW_RAISE: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    newRaises: string;
                };
                parameters: Parameter[];
                blockId: number;
                image: string;
            };
        };
        OVERPASS_IP: {
            description: string;
            image: string;
            ON_NEW_OPPORTUNITY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    title: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: boolean;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    ETFS: {
        IBIT: {
            description: string;
            image: string;
            AUM: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                output: {
                    asset_under_management: string;
                };
                parameters: Parameter[];
                examples: ({
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                } | {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                    externalVariableDescription?: undefined;
                })[];
                blockId: number;
                image: string;
            };
        };
    };
    NFTS: {
        BLUR: {
            description: string;
            chains: number[];
            image: string;
            LISTING: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                blockData: string;
                parameters: Parameter[];
                output: {
                    listingId: string;
                    tokenId: string;
                    price: string;
                    source: string;
                    imageUrl: string;
                    attributes: string;
                    rarity: string;
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            GET_NFT_COLLECTION_FLOOR_PRICE: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                output: {
                    floorPrice: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            NFT_SALE_TRIGGER: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    PRE_MARKET: {
        WHALES_MARKET: {
            description: string;
            chains: number[];
            image: string;
        };
    };
    TECHNICAL: {
        GAS: {
            description: string;
            image: string;
            GAS_API: {
                name: string;
                dynamicName: string;
                description: string;
                prototype: string;
                type: number;
                output: {
                    gasPrice: string;
                };
                parameters: Parameter[];
                examples: ({
                    name: string;
                    description: string;
                    externalVariableDescription: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                } | {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                    externalVariableDescription?: undefined;
                })[];
                blockId: number;
                image: string;
            };
        };
    };
};
export declare const ACTIONS: {
    TRENDING: {
        TELEGRAM: {
            description: string;
            image: string;
            SEND_MESSAGE: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                limitLength: number;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                template: {
                    url: string;
                    body: {
                        chat_id: string;
                        text: string;
                        message_thread_id: string;
                    };
                };
                examples: never[];
                blockId: number;
                image: string;
            };
        };
        SWAP: {
            description: string;
            image: string;
            chains: number[];
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                output: {
                    amountIn: string;
                    tokenIn: string;
                    amountOut: string;
                    tokenOut: string;
                    transactionHash: string;
                    exchangeRate: string;
                    logs: string;
                };
                frontendHelpers: {
                    output: {
                        amountIn: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amountOut: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
        AI: {
            description: string;
            image: string;
            AI: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    result: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            AI_TEXT: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    result: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    CORE: {
        EMPTYBLOCK: {
            image: string;
            description: string;
            chains: never[];
            EMPTYBLOCK: {
                name: string;
                description: string;
                type: number;
                checks: never[];
                output: {};
                parameters: Parameter[];
                examples: never[];
                blockId: number;
                image: string;
            };
        };
        DELAY: {
            description: string;
            image: string;
            WAIT_FOR: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            WAIT_UNTIL: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        SWAP: {
            description: string;
            image: string;
            chains: number[];
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                output: {
                    amountIn: string;
                    tokenIn: string;
                    amountOut: string;
                    tokenOut: string;
                    transactionHash: string;
                    exchangeRate: string;
                    logs: string;
                };
                frontendHelpers: {
                    output: {
                        amountIn: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amountOut: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
        CONDITION: {
            description: string;
            image: string;
            IF: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                parameters: Parameter[];
                examples: never[];
                blockId: number;
                image: string;
            };
        };
        SPLIT: {
            description: string;
            image: string;
            SPLIT: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: number;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        MATHEMATICS: {
            description: string;
            image: string;
            MATHEMATICS: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    resultAsFloat: string;
                    resultAsInteger: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: number;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        SCRIPT: {
            description: string;
            image: string;
            comingSoon: boolean;
            SCRIPT: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                parameters: Parameter[];
                examples: never[];
                blockId: number;
                image: string;
                comingSoon: boolean;
            };
        };
        HTTP_REQUEST: {
            description: string;
            image: string;
            HTTP_REQUEST: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    status: string;
                    data: string;
                    headers: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    NOTIFICATIONS: {
        EMAIL: {
            description: string;
            image: string;
            SEND_EMAIL: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        SLACK: {
            description: string;
            image: string;
            SEND_MESSAGE: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                limitLength: number;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                template: {
                    url: string;
                    body: {
                        text: string;
                    };
                };
                examples: never[];
                blockId: number;
                image: string;
            };
        };
        DISCORD: {
            description: string;
            image: string;
            SEND_MESSAGE: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                limitLength: number;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                template: {
                    url: string;
                    body: {
                        content: string;
                    };
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
        TELEGRAM: {
            description: string;
            image: string;
            SEND_MESSAGE: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                limitLength: number;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                template: {
                    url: string;
                    body: {
                        chat_id: string;
                        text: string;
                        message_thread_id: string;
                    };
                };
                examples: never[];
                blockId: number;
                image: string;
            };
        };
        HUMAN_IN_THE_LOOP: {
            description: string;
            tags: {};
            image: string;
            TELEGRAM_POLL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                output: {
                    answer: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: string[];
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
        WHATSAPP: {
            description: string;
            image: string;
            comingSoon: boolean;
            SEND_MESSAGE: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                };
                parameters: Parameter[];
                template: {
                    url: string;
                    headers: {
                        Authorization: string;
                    };
                    body: {
                        messaging_product: string;
                        type: string;
                        to: string;
                        text: {
                            body: string;
                        };
                    };
                };
                examples: never[];
                blockId: number;
                image: string;
                comingSoon: boolean;
            };
        };
        IEXEC: {
            description: string;
            image: string;
            SEND_WEB3MAIL: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                    taskId: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            SEND_WEB3_TELEGRAM: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    message: string;
                    taskId: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    LENDING: {
        IONIC: {
            description: string;
            chains: number[];
            image: string;
            DEPOSIT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                batchWith: {
                    id: number;
                    type: number;
                    conditions: never[];
                    parameters: {
                        chainId: string;
                        abi: {
                            parameters: {
                                tokens: string[];
                            };
                        };
                    };
                }[];
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: never[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                blockId: number;
                image: string;
            };
            BORROW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: never[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            REPAY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            ENABLE_COLLATERAL: {
                showInUI: boolean;
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: never[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
        AAVE: {
            description: string;
            chains: number[];
            image: string;
            SUPPLY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                blockId: number;
                image: string;
            };
        };
        MOONWELL: {
            description: string;
            chains: number[];
            image: string;
            DEPOSIT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                batchWith: {
                    id: number;
                    type: number;
                    conditions: never[];
                    parameters: {
                        chainId: string;
                        abi: {
                            parameters: {
                                tokens: string[];
                            };
                        };
                    };
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: never[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                blockId: number;
                image: string;
            };
            BORROW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: never[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            REPAY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            ENABLE_COLLATERAL: {
                showInUI: boolean;
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: never[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
        COMPOUND: {
            description: string;
            chains: number[];
            image: string;
            DEPOSIT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: never[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
        IRONCLAD: {
            description: string;
            chains: number[];
            image: string;
            SUPPLY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                blockId: number;
                image: string;
            };
        };
        MORPHO: {
            description: string;
            chains: number[];
            image: string;
            DEPOSIT: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            WITHDRAW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            BORROW: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            REPAY: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            SUPPLY_COLLATERAL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
            WITHDRAW_COLLATERAL: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                method: string;
                parameters: Parameter[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                output: {
                    transactionHash: string;
                };
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    SWAP: {
        ODOS: {
            description: string;
            chains: number[];
            image: string;
            SWAP: {
                name: string;
                dynamicName: string;
                description: string;
                type: number;
                requiredApprovals: {
                    address: string;
                    amount: string;
                    to: string;
                }[];
                checks: {
                    type: number;
                    chainId: string;
                    contractAddress: string;
                    amount: string;
                }[];
                output: {
                    amountIn: string;
                    tokenIn: string;
                    amountOut: string;
                    tokenOut: string;
                    transactionHash: string;
                    exchangeRate: string;
                    logs: string;
                };
                frontendHelpers: {
                    output: {
                        amountIn: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                        amountOut: {
                            formatAmount: boolean;
                            erc20Token: {
                                contractAddress: string;
                                chainId: string;
                            };
                        };
                    };
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: number;
                    } | {
                        key: string;
                        value: string;
                    })[];
                }[];
                permissions: {
                    chainId: string;
                    approvedTargets: string[];
                    label: string[];
                    labelNotAuthorized: string[];
                };
                blockId: number;
                image: string;
            };
        };
    };
    NFTS: {
        BLUR: {
            description: string;
            chains: number[];
            image: string;
        };
    };
    AI: {
        AI: {
            description: string;
            image: string;
            AI: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    result: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
            AI_TEXT: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    result: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: {
                        key: string;
                        value: string;
                    }[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
    OTHERS: {
        GSHEET: {
            description: string;
            image: string;
            GSHEET: {
                name: string;
                dynamicName: string;
                type: number;
                description: string;
                output: {
                    spreadsheetId: string;
                    sheetId: string;
                    result: string;
                    error: string;
                };
                parameters: Parameter[];
                examples: {
                    name: string;
                    description: string;
                    parameters: ({
                        key: string;
                        value: string;
                    } | {
                        key: string;
                        value: string[][];
                    })[];
                }[];
                blockId: number;
                image: string;
            };
        };
    };
};
